// Objective-C API for talking to github.com/ethereum/go-ethereum/mobile Go package.
//   gobind -lang=objc -prefix=GE github.com/ethereum/go-ethereum/mobile
//
// File is generated by gobind. Do not edit.

#ifndef __GEGeth_H__
#define __GEGeth_H__

@import Foundation;
#include "GoUniverse.h"


@class GEGethAccount;
@class GEGethAccountManager;
@class GEGethAccounts;
@class GEGethAddress;
@class GEGethAddresses;
@class GEGethBigInt;
@class GEGethBigInts;
@class GEGethBlock;
@class GEGethBloom;
@class GEGethBoundContract;
@class GEGethCallMsg;
@class GEGethCallOpts;
@class GEGethChainConfig;
@class GEGethContext;
@class GEGethEnode;
@class GEGethEnodes;
@class GEGethEthereumClient;
@class GEGethFilterQuery;
@class GEGethHash;
@class GEGethHashes;
@class GEGethHeader;
@class GEGethHeaders;
@class GEGethInterface;
@class GEGethInterfaces;
@class GEGethLog;
@class GEGethLogs;
@class GEGethNode;
@class GEGethNodeConfig;
@class GEGethNodeInfo;
@class GEGethNonce;
@class GEGethPeerInfo;
@class GEGethPeerInfos;
@class GEGethReceipt;
@class GEGethStrings;
@class GEGethSubscription;
@class GEGethSyncProgress;
@class GEGethTopics;
@class GEGethTransactOpts;
@class GEGethTransaction;
@class GEGethTransactions;
@protocol GEGethFilterLogsHandler;
@class GEGethFilterLogsHandler;
@protocol GEGethNewHeadHandler;
@class GEGethNewHeadHandler;
@protocol GEGethSigner;
@class GEGethSigner;

@interface GEGethAccount : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (GEGethAddress*)getAddress;
- (NSString*)getFile;
@end

@interface GEGethAccountManager : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (BOOL)deleteAccount:(GEGethAccount*)a passphrase:(NSString*)passphrase error:(NSError**)error;
- (BOOL)exportKey:(GEGethAccount*)a passphrase:(NSString*)passphrase newPassphrase:(NSString*)newPassphrase ret0_:(NSData**)ret0_ error:(NSError**)error;
- (GEGethAccounts*)getAccounts;
- (BOOL)hasAddress:(GEGethAddress*)addr;
- (BOOL)importKey:(NSData*)keyJSON passphrase:(NSString*)passphrase newPassphrase:(NSString*)newPassphrase ret0_:(GEGethAccount**)ret0_ error:(NSError**)error;
- (BOOL)importPreSaleKey:(NSData*)keyJSON passphrase:(NSString*)passphrase ret0_:(GEGethAccount**)ret0_ error:(NSError**)error;
- (BOOL)lock:(GEGethAddress*)addr error:(NSError**)error;
- (BOOL)newAccount:(NSString*)passphrase ret0_:(GEGethAccount**)ret0_ error:(NSError**)error;
- (BOOL)sign:(GEGethAddress*)addr hash:(NSData*)hash ret0_:(NSData**)ret0_ error:(NSError**)error;
- (BOOL)signWithPassphrase:(GEGethAddress*)addr passphrase:(NSString*)passphrase hash:(NSData*)hash ret0_:(NSData**)ret0_ error:(NSError**)error;
- (BOOL)timedUnlock:(GEGethAccount*)a passphrase:(NSString*)passphrase timeout:(int64_t)timeout error:(NSError**)error;
- (BOOL)unlock:(GEGethAccount*)a passphrase:(NSString*)passphrase error:(NSError**)error;
- (BOOL)update:(GEGethAccount*)a passphrase:(NSString*)passphrase newPassphrase:(NSString*)newPassphrase error:(NSError**)error;
@end

@interface GEGethAccounts : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (BOOL)get:(long)index ret0_:(GEGethAccount**)ret0_ error:(NSError**)error;
- (BOOL)set:(long)index account:(GEGethAccount*)account error:(NSError**)error;
- (long)size;
@end

@interface GEGethAddress : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (NSData*)getBytes;
- (NSString*)getHex;
- (BOOL)setBytes:(NSData*)address error:(NSError**)error;
- (BOOL)setHex:(NSString*)address error:(NSError**)error;
@end

@interface GEGethAddresses : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (BOOL)get:(long)index ret0_:(GEGethAddress**)ret0_ error:(NSError**)error;
- (BOOL)set:(long)index address:(GEGethAddress*)address error:(NSError**)error;
- (long)size;
@end

@interface GEGethBigInt : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (NSData*)getBytes;
- (int64_t)getInt64;
- (NSString*)getString:(long)base;
- (void)setBytes:(NSData*)buf;
- (void)setInt64:(int64_t)x;
- (void)setString:(NSString*)x base:(long)base;
- (NSString*)string;
@end

@interface GEGethBigInts : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (BOOL)get:(long)index ret0_:(GEGethBigInt**)ret0_ error:(NSError**)error;
- (BOOL)set:(long)index bigint:(GEGethBigInt*)bigint error:(NSError**)error;
- (long)size;
@end

@interface GEGethBlock : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (GEGethBloom*)getBloom;
- (GEGethAddress*)getCoinbase;
- (GEGethBigInt*)getDifficulty;
- (NSData*)getExtra;
- (int64_t)getGasLimit;
- (int64_t)getGasUsed;
- (GEGethHash*)getHash;
- (GEGethHash*)getHashNoNonce;
- (GEGethHeader*)getHeader;
- (GEGethHash*)getMixDigest;
- (int64_t)getNonce;
- (int64_t)getNumber;
- (GEGethHash*)getParentHash;
- (GEGethHash*)getReceiptHash;
- (GEGethHash*)getRoot;
- (int64_t)getTime;
- (GEGethTransaction*)getTransaction:(GEGethHash*)hash;
- (GEGethTransactions*)getTransactions;
- (GEGethHash*)getTxHash;
- (GEGethHash*)getUncleHash;
- (GEGethHeaders*)getUncles;
@end

@interface GEGethBloom : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (NSData*)getBytes;
- (NSString*)getHex;
@end

@interface GEGethBoundContract : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (BOOL)call:(GEGethCallOpts*)opts out_:(GEGethInterfaces*)out_ method:(NSString*)method args:(GEGethInterfaces*)args error:(NSError**)error;
- (GEGethAddress*)getAddress;
- (GEGethTransaction*)getDeployer;
- (BOOL)transact:(GEGethTransactOpts*)opts method:(NSString*)method args:(GEGethInterfaces*)args ret0_:(GEGethTransaction**)ret0_ error:(NSError**)error;
- (BOOL)transfer:(GEGethTransactOpts*)opts ret0_:(GEGethTransaction**)ret0_ error:(NSError**)error;
@end

@interface GEGethCallMsg : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (NSData*)getData;
- (GEGethAddress*)getFrom;
- (int64_t)getGas;
- (GEGethBigInt*)getGasPrice;
- (GEGethAddress*)getTo;
- (GEGethBigInt*)getValue;
- (void)setData:(NSData*)data;
- (void)setFrom:(GEGethAddress*)address;
- (void)setGas:(int64_t)gas;
- (void)setGasPrice:(GEGethBigInt*)price;
- (void)setTo:(GEGethAddress*)address;
- (void)setValue:(GEGethBigInt*)value;
@end

@interface GEGethCallOpts : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (int64_t)getGasLimit;
- (BOOL)isPending;
- (void)setContext:(GEGethContext*)context;
- (void)setGasLimit:(int64_t)limit;
- (void)setPending:(BOOL)pending;
@end

@interface GEGethChainConfig : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (int64_t)chainID;
- (void)setChainID:(int64_t)v;
- (int64_t)homesteadBlock;
- (void)setHomesteadBlock:(int64_t)v;
- (int64_t)daoForkBlock;
- (void)setDAOForkBlock:(int64_t)v;
- (BOOL)daoForkSupport;
- (void)setDAOForkSupport:(BOOL)v;
- (int64_t)eiP150Block;
- (void)setEIP150Block:(int64_t)v;
// skipped field ChainConfig.EIP150Hash with unsupported type: *types.Named

- (int64_t)eiP155Block;
- (void)setEIP155Block:(int64_t)v;
- (int64_t)eiP158Block;
- (void)setEIP158Block:(int64_t)v;
@end

@interface GEGethContext : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (GEGethContext*)withCancel;
- (GEGethContext*)withDeadline:(int64_t)sec nsec:(int64_t)nsec;
- (GEGethContext*)withTimeout:(int64_t)nsec;
@end

@interface GEGethEnode : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
@end

@interface GEGethEnodes : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (void)append:(GEGethEnode*)enode;
- (BOOL)get:(long)index ret0_:(GEGethEnode**)ret0_ error:(NSError**)error;
- (BOOL)set:(long)index enode:(GEGethEnode*)enode error:(NSError**)error;
- (long)size;
@end

@interface GEGethEthereumClient : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (BOOL)callContract:(GEGethContext*)ctx msg:(GEGethCallMsg*)msg number:(int64_t)number ret0_:(NSData**)ret0_ error:(NSError**)error;
- (BOOL)estimateGas:(GEGethContext*)ctx msg:(GEGethCallMsg*)msg ret0_:(GEGethBigInt**)ret0_ error:(NSError**)error;
- (BOOL)filterLogs:(GEGethContext*)ctx query:(GEGethFilterQuery*)query ret0_:(GEGethLogs**)ret0_ error:(NSError**)error;
- (BOOL)getBalanceAt:(GEGethContext*)ctx account:(GEGethAddress*)account number:(int64_t)number ret0_:(GEGethBigInt**)ret0_ error:(NSError**)error;
- (BOOL)getBlockByHash:(GEGethContext*)ctx hash:(GEGethHash*)hash ret0_:(GEGethBlock**)ret0_ error:(NSError**)error;
- (BOOL)getBlockByNumber:(GEGethContext*)ctx number:(int64_t)number ret0_:(GEGethBlock**)ret0_ error:(NSError**)error;
- (BOOL)getCodeAt:(GEGethContext*)ctx account:(GEGethAddress*)account number:(int64_t)number ret0_:(NSData**)ret0_ error:(NSError**)error;
- (BOOL)getHeaderByHash:(GEGethContext*)ctx hash:(GEGethHash*)hash ret0_:(GEGethHeader**)ret0_ error:(NSError**)error;
- (BOOL)getHeaderByNumber:(GEGethContext*)ctx number:(int64_t)number ret0_:(GEGethHeader**)ret0_ error:(NSError**)error;
- (BOOL)getNonceAt:(GEGethContext*)ctx account:(GEGethAddress*)account number:(int64_t)number ret0_:(int64_t*)ret0_ error:(NSError**)error;
- (BOOL)getPendingBalanceAt:(GEGethContext*)ctx account:(GEGethAddress*)account ret0_:(GEGethBigInt**)ret0_ error:(NSError**)error;
- (BOOL)getPendingCodeAt:(GEGethContext*)ctx account:(GEGethAddress*)account ret0_:(NSData**)ret0_ error:(NSError**)error;
- (BOOL)getPendingNonceAt:(GEGethContext*)ctx account:(GEGethAddress*)account ret0_:(int64_t*)ret0_ error:(NSError**)error;
- (BOOL)getPendingStorageAt:(GEGethContext*)ctx account:(GEGethAddress*)account key:(GEGethHash*)key ret0_:(NSData**)ret0_ error:(NSError**)error;
- (BOOL)getPendingTransactionCount:(GEGethContext*)ctx ret0_:(long*)ret0_ error:(NSError**)error;
- (BOOL)getStorageAt:(GEGethContext*)ctx account:(GEGethAddress*)account key:(GEGethHash*)key number:(int64_t)number ret0_:(NSData**)ret0_ error:(NSError**)error;
- (BOOL)getTransactionByHash:(GEGethContext*)ctx hash:(GEGethHash*)hash ret0_:(GEGethTransaction**)ret0_ error:(NSError**)error;
- (BOOL)getTransactionCount:(GEGethContext*)ctx hash:(GEGethHash*)hash ret0_:(long*)ret0_ error:(NSError**)error;
- (BOOL)getTransactionInBlock:(GEGethContext*)ctx hash:(GEGethHash*)hash index:(long)index ret0_:(GEGethTransaction**)ret0_ error:(NSError**)error;
- (BOOL)getTransactionReceipt:(GEGethContext*)ctx hash:(GEGethHash*)hash ret0_:(GEGethReceipt**)ret0_ error:(NSError**)error;
- (BOOL)pendingCallContract:(GEGethContext*)ctx msg:(GEGethCallMsg*)msg ret0_:(NSData**)ret0_ error:(NSError**)error;
- (BOOL)sendTransaction:(GEGethContext*)ctx tx:(GEGethTransaction*)tx error:(NSError**)error;
- (BOOL)subscribeFilterLogs:(GEGethContext*)ctx query:(GEGethFilterQuery*)query handler:(id<GEGethFilterLogsHandler>)handler buffer:(long)buffer ret0_:(GEGethSubscription**)ret0_ error:(NSError**)error;
- (BOOL)subscribeNewHead:(GEGethContext*)ctx handler:(id<GEGethNewHeadHandler>)handler buffer:(long)buffer ret0_:(GEGethSubscription**)ret0_ error:(NSError**)error;
- (BOOL)suggestGasPrice:(GEGethContext*)ctx ret0_:(GEGethBigInt**)ret0_ error:(NSError**)error;
- (BOOL)syncProgress:(GEGethContext*)ctx ret0_:(GEGethSyncProgress**)ret0_ error:(NSError**)error;
@end

@interface GEGethFilterQuery : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (GEGethAddresses*)getAddresses;
- (GEGethBigInt*)getFromBlock;
- (GEGethBigInt*)getToBlock;
- (GEGethTopics*)getTopics;
@end

@interface GEGethHash : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (NSData*)getBytes;
- (NSString*)getHex;
- (BOOL)setBytes:(NSData*)hash error:(NSError**)error;
- (BOOL)setHex:(NSString*)hash error:(NSError**)error;
@end

@interface GEGethHashes : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (BOOL)get:(long)index ret0_:(GEGethHash**)ret0_ error:(NSError**)error;
- (long)size;
@end

@interface GEGethHeader : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (GEGethBloom*)getBloom;
- (GEGethAddress*)getCoinbase;
- (GEGethBigInt*)getDifficulty;
- (NSData*)getExtra;
- (int64_t)getGasLimit;
- (int64_t)getGasUsed;
- (GEGethHash*)getHash;
- (GEGethHash*)getHashNoNonce;
- (GEGethHash*)getMixDigest;
- (GEGethNonce*)getNonce;
- (int64_t)getNumber;
- (GEGethHash*)getParentHash;
- (GEGethHash*)getReceiptHash;
- (GEGethHash*)getRoot;
- (int64_t)getTime;
- (GEGethHash*)getTxHash;
- (GEGethHash*)getUncleHash;
@end

@interface GEGethHeaders : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (BOOL)get:(long)index ret0_:(GEGethHeader**)ret0_ error:(NSError**)error;
- (long)size;
@end

@interface GEGethInterface : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (GEGethAddress*)getAddress;
- (GEGethAddresses*)getAddresses;
- (GEGethBigInt*)getBigInt;
- (GEGethBigInts*)getBigInts;
// skipped method Interface.GetBinaries with unsupported parameter or return types

- (NSData*)getBinary;
- (BOOL)getBool;
// skipped method Interface.GetBools with unsupported parameter or return types

- (GEGethHash*)getHash;
- (GEGethHashes*)getHashes;
- (int16_t)getInt16;
- (int32_t)getInt32;
- (int64_t)getInt64;
- (int8_t)getInt8;
- (NSString*)getString;
- (GEGethStrings*)getStrings;
- (GEGethBigInt*)getUint16;
- (GEGethBigInt*)getUint32;
- (GEGethBigInt*)getUint64;
- (GEGethBigInt*)getUint8;
- (void)setAddress:(GEGethAddress*)address;
- (void)setAddresses:(GEGethAddresses*)addrs;
- (void)setBigInt:(GEGethBigInt*)bigint;
- (void)setBigInts:(GEGethBigInts*)bigints;
// skipped method Interface.SetBinaries with unsupported parameter or return types

- (void)setBinary:(NSData*)binary;
- (void)setBool:(BOOL)b;
// skipped method Interface.SetBools with unsupported parameter or return types

- (void)setDefaultAddress;
- (void)setDefaultAddresses;
- (void)setDefaultBigInt;
- (void)setDefaultBigInts;
- (void)setDefaultBinaries;
- (void)setDefaultBinary;
- (void)setDefaultBool;
- (void)setDefaultBools;
- (void)setDefaultHash;
- (void)setDefaultHashes;
- (void)setDefaultInt16;
- (void)setDefaultInt32;
- (void)setDefaultInt64;
- (void)setDefaultInt8;
- (void)setDefaultString;
- (void)setDefaultStrings;
- (void)setDefaultUint16;
- (void)setDefaultUint32;
- (void)setDefaultUint64;
- (void)setDefaultUint8;
- (void)setHash:(GEGethHash*)hash;
- (void)setHashes:(GEGethHashes*)hashes;
- (void)setInt16:(int16_t)n;
- (void)setInt32:(int32_t)n;
- (void)setInt64:(int64_t)n;
- (void)setInt8:(int8_t)n;
- (void)setString:(NSString*)str;
- (void)setStrings:(GEGethStrings*)strs;
- (void)setUint16:(GEGethBigInt*)bigint;
- (void)setUint32:(GEGethBigInt*)bigint;
- (void)setUint64:(GEGethBigInt*)bigint;
- (void)setUint8:(GEGethBigInt*)bigint;
@end

@interface GEGethInterfaces : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (BOOL)get:(long)index ret0_:(GEGethInterface**)ret0_ error:(NSError**)error;
- (BOOL)set:(long)index object:(GEGethInterface*)object error:(NSError**)error;
- (long)size;
@end

@interface GEGethLog : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (GEGethAddress*)getAddress;
- (GEGethHash*)getBlockHash;
- (int64_t)getBlockNumber;
- (NSData*)getData;
- (long)getIndex;
- (GEGethHashes*)getTopics;
- (GEGethHash*)getTxHash;
- (long)getTxIndex;
@end

@interface GEGethLogs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (BOOL)get:(long)index ret0_:(GEGethLog**)ret0_ error:(NSError**)error;
- (long)size;
@end

@interface GEGethNode : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (BOOL)getEthereumClient:(GEGethEthereumClient**)ret0_ error:(NSError**)error;
- (GEGethNodeInfo*)getNodeInfo;
- (GEGethPeerInfos*)getPeersInfo;
- (BOOL)start:(NSError**)error;
- (BOOL)stop:(NSError**)error;
@end

@interface GEGethNodeConfig : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (GEGethEnodes*)bootstrapNodes;
- (void)setBootstrapNodes:(GEGethEnodes*)v;
- (long)maxPeers;
- (void)setMaxPeers:(long)v;
- (BOOL)ethereumEnabled;
- (void)setEthereumEnabled:(BOOL)v;
- (long)ethereumNetworkID;
- (void)setEthereumNetworkID:(long)v;
- (GEGethChainConfig*)ethereumChainConfig;
- (void)setEthereumChainConfig:(GEGethChainConfig*)v;
- (NSString*)ethereumGenesis;
- (void)setEthereumGenesis:(NSString*)v;
- (long)ethereumDatabaseCache;
- (void)setEthereumDatabaseCache:(long)v;
- (NSString*)ethereumNetStats;
- (void)setEthereumNetStats:(NSString*)v;
- (BOOL)whisperEnabled;
- (void)setWhisperEnabled:(BOOL)v;
@end

@interface GEGethNodeInfo : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (long)getDiscoveryPort;
- (NSString*)getEnode;
- (NSString*)getID;
- (NSString*)getIP;
- (NSString*)getListenerAddress;
- (long)getListenerPort;
- (NSString*)getName;
- (GEGethStrings*)getProtocols;
@end

@interface GEGethNonce : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (NSData*)getBytes;
- (NSString*)getHex;
@end

@interface GEGethPeerInfo : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (GEGethStrings*)getCaps;
- (NSString*)getID;
- (NSString*)getLocalAddress;
- (NSString*)getName;
- (NSString*)getRemoteAddress;
@end

@interface GEGethPeerInfos : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (BOOL)get:(long)index ret0_:(GEGethPeerInfo**)ret0_ error:(NSError**)error;
- (long)size;
@end

@interface GEGethReceipt : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (GEGethBloom*)getBloom;
- (GEGethAddress*)getContractAddress;
- (GEGethBigInt*)getCumulativeGasUsed;
- (GEGethBigInt*)getGasUsed;
- (GEGethLogs*)getLogs;
- (NSData*)getPostState;
- (GEGethHash*)getTxHash;
@end

@interface GEGethStrings : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (BOOL)get:(long)index ret0_:(NSString**)ret0_ error:(NSError**)error;
- (BOOL)set:(long)index str:(NSString*)str error:(NSError**)error;
- (long)size;
- (NSString*)string;
@end

@interface GEGethSubscription : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (void)unsubscribe;
@end

@interface GEGethSyncProgress : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (int64_t)getCurrentBlock;
- (int64_t)getHighestBlock;
- (int64_t)getKnownStates;
- (int64_t)getPulledStates;
- (int64_t)getStartingBlock;
@end

@interface GEGethTopics : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (BOOL)get:(long)index ret0_:(GEGethHashes**)ret0_ error:(NSError**)error;
- (BOOL)set:(long)index topics:(GEGethHashes*)topics error:(NSError**)error;
- (long)size;
@end

@interface GEGethTransactOpts : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (GEGethAddress*)getFrom;
- (int64_t)getGasLimit;
- (GEGethBigInt*)getGasPrice;
- (int64_t)getNonce;
- (GEGethBigInt*)getValue;
- (void)setContext:(GEGethContext*)context;
- (void)setFrom:(GEGethAddress*)from;
- (void)setGasLimit:(int64_t)limit;
- (void)setGasPrice:(GEGethBigInt*)price;
- (void)setNonce:(int64_t)nonce;
- (void)setSigner:(id<GEGethSigner>)s;
- (void)setValue:(GEGethBigInt*)value;
@end

@interface GEGethTransaction : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (GEGethBigInt*)getCost;
- (NSData*)getData;
- (BOOL)getFrom:(GEGethAddress**)ret0_ error:(NSError**)error;
- (int64_t)getGas;
- (GEGethBigInt*)getGasPrice;
- (GEGethHash*)getHash;
- (int64_t)getNonce;
- (GEGethHash*)getSigHash;
- (GEGethAddress*)getTo;
- (GEGethBigInt*)getValue;
- (BOOL)withSignature:(NSData*)sig ret0_:(GEGethTransaction**)ret0_ error:(NSError**)error;
@end

@interface GEGethTransactions : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (BOOL)get:(long)index ret0_:(GEGethTransaction**)ret0_ error:(NSError**)error;
- (long)size;
@end

@protocol GEGethFilterLogsHandler <NSObject>
- (void)onError:(NSString*)failure;
- (void)onFilterLogs:(GEGethLog*)log;
@end

@protocol GEGethNewHeadHandler <NSObject>
- (void)onError:(NSString*)failure;
- (void)onNewHead:(GEGethHeader*)header;
@end

@protocol GEGethSigner <NSObject>
- (BOOL)sign:(GEGethAddress*)p0 p1:(GEGethTransaction*)p1 ret0_:(GEGethTransaction**)ret0_ error:(NSError**)error;
@end

FOUNDATION_EXPORT const long GEGethLightScryptN;
FOUNDATION_EXPORT const long GEGethLightScryptP;
FOUNDATION_EXPORT const long GEGethStandardScryptN;
FOUNDATION_EXPORT const long GEGethStandardScryptP;

FOUNDATION_EXPORT BOOL GEGethBindContract(GEGethAddress* address, NSString* abiJSON, GEGethEthereumClient* client, GEGethBoundContract** ret0_, NSError** error);

FOUNDATION_EXPORT BOOL GEGethDeployContract(GEGethTransactOpts* opts, NSString* abiJSON, NSData* bytecode, GEGethEthereumClient* client, GEGethInterfaces* args, GEGethBoundContract** ret0_, NSError** error);

FOUNDATION_EXPORT GEGethEnodes* GEGethFoundationBootnodes();

FOUNDATION_EXPORT GEGethChainConfig* GEGethMainnetChainConfig();

FOUNDATION_EXPORT NSString* GEGethMainnetGenesis();

FOUNDATION_EXPORT GEGethAccountManager* GEGethNewAccountManager(NSString* keydir, long scryptN, long scryptP);

FOUNDATION_EXPORT BOOL GEGethNewAddressFromBytes(NSData* address, GEGethAddress** ret0_, NSError** error);

FOUNDATION_EXPORT BOOL GEGethNewAddressFromHex(NSString* address, GEGethAddress** ret0_, NSError** error);

FOUNDATION_EXPORT GEGethBigInt* GEGethNewBigInt(int64_t x);

FOUNDATION_EXPORT GEGethCallMsg* GEGethNewCallMsg();

FOUNDATION_EXPORT GEGethCallOpts* GEGethNewCallOpts();

FOUNDATION_EXPORT GEGethChainConfig* GEGethNewChainConfig();

FOUNDATION_EXPORT GEGethContext* GEGethNewContext();

FOUNDATION_EXPORT BOOL GEGethNewEnode(NSString* rawurl, GEGethEnode** ret0_, NSError** error);

FOUNDATION_EXPORT GEGethEnodes* GEGethNewEnodes(long size);

FOUNDATION_EXPORT GEGethEnodes* GEGethNewEnodesEmpty();

FOUNDATION_EXPORT BOOL GEGethNewEthereumClient(NSString* rawurl, GEGethEthereumClient** ret0_, NSError** error);

FOUNDATION_EXPORT GEGethFilterQuery* GEGethNewFilterQuery();

FOUNDATION_EXPORT BOOL GEGethNewHashFromBytes(NSData* hash, GEGethHash** ret0_, NSError** error);

FOUNDATION_EXPORT BOOL GEGethNewHashFromHex(NSString* hash, GEGethHash** ret0_, NSError** error);

FOUNDATION_EXPORT GEGethInterface* GEGethNewInterface();

FOUNDATION_EXPORT GEGethInterfaces* GEGethNewInterfaces(long size);

FOUNDATION_EXPORT BOOL GEGethNewNode(NSString* datadir, GEGethNodeConfig* config, GEGethNode** ret0_, NSError** error);

FOUNDATION_EXPORT GEGethNodeConfig* GEGethNewNodeConfig();

FOUNDATION_EXPORT GEGethChainConfig* GEGethTestnetChainConfig();

FOUNDATION_EXPORT NSString* GEGethTestnetGenesis();

@class GEGethFilterLogsHandler;

@class GEGethNewHeadHandler;

@class GEGethSigner;

@interface GEGethFilterLogsHandler : NSObject <goSeqRefInterface, GEGethFilterLogsHandler> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (void)onError:(NSString*)failure;
- (void)onFilterLogs:(GEGethLog*)log;
@end

@interface GEGethNewHeadHandler : NSObject <goSeqRefInterface, GEGethNewHeadHandler> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (void)onError:(NSString*)failure;
- (void)onNewHead:(GEGethHeader*)header;
@end

@interface GEGethSigner : NSObject <goSeqRefInterface, GEGethSigner> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (BOOL)sign:(GEGethAddress*)p0 p1:(GEGethTransaction*)p1 ret0_:(GEGethTransaction**)ret0_ error:(NSError**)error;
@end

#endif
